{"ast":null,"code":"var _jsxFileName = \"D:\\\\Patch\\\\react\\\\react-auth\\\\src\\\\pages\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTable } from \"react-table\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = props => {\n  _s();\n  let columns1 = [{\n    Header: \"taskuuid\",\n    accessor: \"taskuuid\",\n    show: false\n  }, {\n    Header: \"Title\",\n    accessor: \"Title\",\n    sortable: true,\n    show: true,\n    displayValue: \"Title\"\n  }, {\n    Header: \"Description\",\n    accessor: \"description\",\n    sortable: true,\n    show: true,\n    displayValue: \"Discription\"\n  }, {\n    Header: \"Status\",\n    accessor: \"status\",\n    sortable: true,\n    show: true,\n    displayValue: \"status\"\n  }, {\n    Header: \"Created Date\",\n    accessor: \"createDt\",\n    sortable: true,\n    show: true,\n    displayValue: \"Created Date\"\n  }, {\n    Header: \"Edit\",\n    maxWidth: 100\n\n    //   Cell:row => (<div className=\"grdbuttoncontainer\"><div className=\"downloadcontainer\"> <a\n    //       className=\"downloadbutton\"\n    //       aria-label=\"Download\"\n    //      // onClick={(event) => this.handlePDFClick(row,event)}\n    //   >\n    //       <i className=\"\">\n    //           <img\n    //               alt=\"PDF\"\n    //               className=\"\"\n    //               src=\"/images/pdf_icon.png\"\n    //               title=\"PDF\"\n    //           />\n\n    //       </i>\n    //   </a>\n    //   <a\n    //       className=\"downloadbutton\"\n    //       aria-label=\"Download\"\n    //      // onClick={(event) => this.handleCSVClick(row,event)}\n    //   >\n    //       <i className=\"\">\n\n    //           <img\n    //               alt=\"CSV\"\n    //               className=\"ml-3\"\n    //               src=\"/images/csv_icon.png\"\n    //               title=\"CSV\"\n    //           />\n    //       </i>\n    //   </a>\n    //   </div></div>)\n  }];\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Column 1',\n    accessor: 'col1'\n  },\n  // This is a column object\n  {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"  \", props.name ? 'Task list page ' + props.name : 'Not validat user', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row col-md-12 mt-10  ml-0 p0\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 6\n  }, this);\n};\n_s(TaskList, \"ZFp2ZLEtGvZJnB6k1IDEFGHd1go=\", false, function () {\n  return [useTable];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","TaskList","props","_s","columns1","Header","accessor","show","sortable","displayValue","maxWidth","data","useMemo","col1","col2","columns","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","name","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["D:/Patch/react/react-auth/src/pages/TaskList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useTable } from \"react-table\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\nimport { ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TaskList=(props:{name:string})=> {\r\n\r\n    let columns1 = [\r\n        {\r\n          Header: \"taskuuid\",\r\n          accessor: \"taskuuid\",\r\n          show: false,\r\n             \r\n          \r\n        },\r\n        {\r\n          Header: \"Title\",\r\n          accessor: \"Title\",\r\n          sortable: true,\r\n          show: true,\r\n          displayValue: \"Title\"\r\n          \r\n        },  \r\n        {\r\n            Header: \"Description\",\r\n            accessor: \"description\",\r\n            sortable: true,\r\n            show: true,\r\n            displayValue: \"Discription\"\r\n            \r\n          },  \r\n          {\r\n            Header: \"Status\",\r\n            accessor: \"status\",\r\n            sortable: true,\r\n            show: true,\r\n            displayValue: \"status\"\r\n            \r\n          },  \r\n        {\r\n          Header: \"Created Date\",\r\n          accessor: \"createDt\",\r\n          sortable: true,\r\n          show: true,            \r\n          displayValue: \"Created Date\"\r\n          \r\n        },\r\n        {\r\n          Header:\"Edit\",\r\n          maxWidth: 100,\r\n           \r\n        //   Cell:row => (<div className=\"grdbuttoncontainer\"><div className=\"downloadcontainer\"> <a\r\n        //       className=\"downloadbutton\"\r\n        //       aria-label=\"Download\"\r\n        //      // onClick={(event) => this.handlePDFClick(row,event)}\r\n        //   >\r\n        //       <i className=\"\">\r\n        //           <img\r\n        //               alt=\"PDF\"\r\n        //               className=\"\"\r\n        //               src=\"/images/pdf_icon.png\"\r\n        //               title=\"PDF\"\r\n        //           />\r\n                   \r\n        //       </i>\r\n        //   </a>\r\n        //   <a\r\n        //       className=\"downloadbutton\"\r\n        //       aria-label=\"Download\"\r\n        //      // onClick={(event) => this.handleCSVClick(row,event)}\r\n        //   >\r\n        //       <i className=\"\">\r\n                  \r\n        //           <img\r\n        //               alt=\"CSV\"\r\n        //               className=\"ml-3\"\r\n        //               src=\"/images/csv_icon.png\"\r\n        //               title=\"CSV\"\r\n        //           />\r\n        //       </i>\r\n        //   </a>\r\n        //   </div></div>)\r\n        }   \r\n       \r\n      ];\r\n      const data = React.useMemo(() => [{ col1: 'Hello', col2: 'World' }], []);\r\n      const columns = React.useMemo(() => [\r\n        { Header: 'Column 1', accessor: 'col1' }, // This is a column object\r\n        { Header: 'Column 2', accessor: 'col2' },\r\n      ], []);\r\n    \r\n      const tableInstance = useTable({ columns, data });\r\n    \r\n      const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n    \r\n    \r\n  return (\r\n     <div>  {props.name?'Task list page '+props.name:'Not validat user'}\r\n      \r\n      <div  className=\"row col-md-12 mt-10  ml-0 p0\">\r\n                                {/* <table\r\n                                data={tasklist}\r\n                                columns={columns}\r\n                                defaultPageSize={15}\r\n                                className=\"-striped -highlight fullwidth\"\r\n                                /> */}\r\n      \r\n      <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map(row => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    \r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}