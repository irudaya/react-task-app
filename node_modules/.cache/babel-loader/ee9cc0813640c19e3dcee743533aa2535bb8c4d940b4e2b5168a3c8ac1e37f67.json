{"ast":null,"code":"var _jsxFileName = \"D:\\\\Patch\\\\react\\\\react-auth\\\\src\\\\pages\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useTable } from \"react-table\";\n\n// const TaskList = (props:{name:string}) => {\n\n//   const data = React.useMemo(\n//     () => [\n//       {\n//         col1: 'Minsk',\n//         col2: '27',\n//         col3: 'rain',\n//       },\n//       {\n//         col1: 'Vilnius',\n//         col2: '30',\n//         col3: 'rain',\n//       },\n//       {\n//         col1: 'London',\n//         col2: '23',\n//         col3: 'rain',\n//       },\n//     ],\n//     []\n// )\n\n// const columns = React.useMemo(\n//     () => [\n//       {\n//         Header: 'City',\n//         accessor: 'col1', // accessor is the \"key\" in the data\n//       },\n//       {\n//         Header: 'Temperature',\n//         accessor: 'col2',\n//       },\n//       {\n//         Header: 'Weather Forecast',\n//         accessor: 'col3', // accessor is the \"key\" in the data\n//       },\n//     ],\n//     []\n// )\n\n// const {\n//   getTableProps,\n//   getTableBodyProps,\n//   headerGroups,\n//   rows,\n//   prepareRow,\n// } = useTable({ columns, data })\n\n//   return (\n//     <table {...getTableProps()}>\n//       <thead>\n//         {headerGroups.map(headerGroup => (\n//           <tr {...headerGroup.getHeaderGroupProps()}>\n//             {headerGroup.headers.map(column => (\n//               <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n//             ))}\n//           </tr>\n//         ))}\n//       </thead>\n//       <tbody {...getTableBodyProps()}>\n//         {rows.map(row => {\n//           prepareRow(row);\n//           return (\n//             <tr {...row.getRowProps()}>\n//               {row.cells.map(cell => (\n//                 <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n//               ))}\n//             </tr>\n//           );\n//         })}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default   TaskList;\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useTable } from \"react-table\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList(props) {\n  _s();\n  const data = React.useMemo(() => [{\n    taskuuid: \"Hello\",\n    title: \"World\",\n    description: \"desc\",\n    status: \"pending\"\n  }, {\n    taskuuid: \"react-table\",\n    title: \"rocks\",\n    description: \"desc\",\n    status: \"pending\"\n  }, {\n    taskuuid: \"whatever\",\n    title: \"you want\",\n    description: \"desc\",\n    status: \"pending\"\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: \"Uuid\",\n    accessor: \"taskuuid\" // accessor is the \"key\" in the data\n  }, {\n    Header: \"title\",\n    accessor: \"title\"\n  }, {\n    Header: \"description\",\n    accessor: \"description\"\n  }, {\n    Header: \"status\",\n    accessor: \"status\"\n  }], []);\n  const options = {\n    data,\n    columns\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-xxl my-md-4 bd-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.name ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Task List page :\", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 22\n      }, this) : 'Not validat user'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-bordered \",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"row\",\n          ...headerGroup.getHeaderGroupProps(),\n          children: [headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \" col-2 \",\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \" col-4 \",\n            children: \"Edit/Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"row\",\n            ...row.getRowProps(),\n            children: [row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"col-2\",\n                ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \" col-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 38\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"wq9KxZn31aGraUI7QK83osjZyiY=\", false, function () {\n  return [useTable];\n});\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useTable","React","jsxDEV","_jsxDEV","TaskList","props","_s","data","useMemo","taskuuid","title","description","status","columns","Header","accessor","options","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","href","_c","$RefreshReg$"],"sources":["D:/Patch/react/react-auth/src/pages/TaskList.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useTable } from \"react-table\";\r\n \r\n\r\n \r\n\r\n\r\n// const TaskList = (props:{name:string}) => {\r\n\r\n\r\n//   const data = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         col1: 'Minsk',\r\n//         col2: '27',\r\n//         col3: 'rain',\r\n//       },\r\n//       {\r\n//         col1: 'Vilnius',\r\n//         col2: '30',\r\n//         col3: 'rain',\r\n//       },\r\n//       {\r\n//         col1: 'London',\r\n//         col2: '23',\r\n//         col3: 'rain',\r\n//       },\r\n//     ],\r\n//     []\r\n// )\r\n\r\n// const columns = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         Header: 'City',\r\n//         accessor: 'col1', // accessor is the \"key\" in the data\r\n//       },\r\n//       {\r\n//         Header: 'Temperature',\r\n//         accessor: 'col2',\r\n//       },\r\n//       {\r\n//         Header: 'Weather Forecast',\r\n//         accessor: 'col3', // accessor is the \"key\" in the data\r\n//       },\r\n//     ],\r\n//     []\r\n// )\r\n\r\n// const {\r\n//   getTableProps,\r\n//   getTableBodyProps,\r\n//   headerGroups,\r\n//   rows,\r\n//   prepareRow,\r\n// } = useTable({ columns, data })\r\n\r\n\r\n//   return (\r\n//     <table {...getTableProps()}>\r\n//       <thead>\r\n//         {headerGroups.map(headerGroup => (\r\n//           <tr {...headerGroup.getHeaderGroupProps()}>\r\n//             {headerGroup.headers.map(column => (\r\n//               <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n//             ))}\r\n//           </tr>\r\n//         ))}\r\n//       </thead>\r\n//       <tbody {...getTableBodyProps()}>\r\n//         {rows.map(row => {\r\n//           prepareRow(row);\r\n//           return (\r\n//             <tr {...row.getRowProps()}>\r\n//               {row.cells.map(cell => (\r\n//                 <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n//               ))}\r\n//             </tr>\r\n//           );\r\n//         })}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// }\r\n\r\n// export default   TaskList;\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { useTable, TableOptions, Column } from \"react-table\";\r\nimport React from \"react\";\r\n\r\ntype Cols = { taskuuid: string; title: string,description:string,status:string };\r\n\r\nexport default function TaskList(props:{name:string}) {\r\n  const data = React.useMemo(\r\n    (): Cols[] => [\r\n      {\r\n        taskuuid: \"Hello\",\r\n        title: \"World\",\r\n        description:\"desc\",\r\n        status:\"pending\"\r\n      },\r\n      {\r\n        taskuuid: \"react-table\",\r\n        title: \"rocks\",\r\n        description:\"desc\",\r\n        status:\"pending\"\r\n      },\r\n      {\r\n        taskuuid: \"whatever\",\r\n        title: \"you want\",\r\n        description:\"desc\",\r\n        status:\"pending\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const columns: Column<{ taskuuid: string; title: string,description:string,status:string }>[] = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Uuid\",\r\n        accessor: \"taskuuid\" // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"title\",\r\n        accessor: \"title\"\r\n      }\r\n      ,\r\n      {\r\n        Header: \"description\",\r\n        accessor: \"description\"\r\n      }\r\n      ,\r\n      {\r\n        Header: \"status\",\r\n        accessor: \"status\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const options: TableOptions<{ taskuuid: string; title: string,description:string,status:string }> = {\r\n    data,\r\n    columns\r\n  };\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = useTable(options);\r\n\r\n  return (\r\n    <div className=\"container-xxl my-md-4 bd-layout\">\r\n\r\n  \r\n    <div>{props.name?<h1>Task List page :{props.name}</h1>:'Not validat user'}</div>\r\n    <div className=\"mb-3\"><button className=\"btn btn-primary\">Add New</button></div>\r\n    <table className=\"table table-striped table-bordered \"  {...getTableProps()} >\r\n      <thead> \r\n        {headerGroups.map((headerGroup) => (\r\n          <tr className=\"row\"  {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th className=\" col-2 \"\r\n                {...column.getHeaderProps()}\r\n                \r\n              >\r\n                {column.render(\"Header\")}\r\n              </th>\r\n            ))}\r\n            <th className=\" col-4 \">Edit/Delete</th>\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr className=\"row\" {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return (\r\n                  <td className=\"col-2\"\r\n                    {...cell.getCellProps()}\r\n                     \r\n                  >\r\n                    {cell.render(\"Cell\")}\r\n                  </td>\r\n                );\r\n              })}\r\n              <td className=\" col-4\"><a href=\"#\">Edit</a> <a href=\"#\">Delete</a></td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}