{"ast":null,"code":"var _jsxFileName = \"D:\\\\Patch\\\\react\\\\react-auth\\\\src\\\\pages\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTable } from \"react-table\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Column 1',\n    accessor: 'col1'\n  },\n  // This is a column object\n  {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"ZFp2ZLEtGvZJnB6k1IDEFGHd1go=\", false, function () {\n  return [useTable];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","TaskList","_s","data","useMemo","col1","col2","columns","Header","accessor","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["D:/Patch/react/react-auth/src/pages/TaskList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useTable } from \"react-table\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\nimport { ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction TaskList() {\r\nconst data = React.useMemo(() => [{ col1: 'Hello', col2: 'World' }], []);\r\n  const columns = React.useMemo(() => [\r\n    { Header: 'Column 1', accessor: 'col1' }, // This is a column object\r\n    { Header: 'Column 2', accessor: 'col2' },\r\n  ], []);\r\n\r\n  const tableInstance = useTable({ columns, data });\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map(row => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default   TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAItC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGN,KAAK,CAACO,OAAO,CAAC,MAAM,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;EACtE,MAAMC,OAAO,GAAGV,KAAK,CAACO,OAAO,CAAC,MAAM,CAClC;IAAEI,MAAM,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAO,CAAC;EAAE;EAC1C;IAAED,MAAM,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAO,CAAC,CACzC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAGZ,QAAQ,CAAC;IAAES,OAAO;IAAEJ;EAAK,CAAC,CAAC;EAEjD,MAAM;IAAEQ,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGL,aAAa;EAE1F,oBACEV,OAAA;IAAA,GAAWW,aAAa,CAAC,CAAC;IAAAK,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EACGH,YAAY,CAACI,GAAG,CAACC,WAAW,iBAC3BlB,OAAA;QAAA,GAAQkB,WAAW,CAACC,mBAAmB,CAAC,CAAC;QAAAH,QAAA,EACtCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,iBAC7BrB,OAAA;UAAA,GAAQqB,MAAM,CAACC,cAAc,CAAC,CAAC;UAAAN,QAAA,EAAGK,MAAM,CAACE,MAAM,CAAC,QAAQ;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR3B,OAAA;MAAA,GAAWY,iBAAiB,CAAC,CAAC;MAAAI,QAAA,EAC3BF,IAAI,CAACG,GAAG,CAACW,GAAG,IAAI;QACfb,UAAU,CAACa,GAAG,CAAC;QACf,oBACE5B,OAAA;UAAA,GAAQ4B,GAAG,CAACC,WAAW,CAAC,CAAC;UAAAb,QAAA,EACtBY,GAAG,CAACE,KAAK,CAACb,GAAG,CAACc,IAAI,iBACjB/B,OAAA;YAAA,GAAQ+B,IAAI,CAACC,YAAY,CAAC,CAAC;YAAAhB,QAAA,EAAGe,IAAI,CAACR,MAAM,CAAC,MAAM;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACvD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACzB,EAAA,CApCQD,QAAQ;EAAA,QAOOH,QAAQ;AAAA;AAAAmC,EAAA,GAPvBhC,QAAQ;AAsCjB,eAAiBA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}