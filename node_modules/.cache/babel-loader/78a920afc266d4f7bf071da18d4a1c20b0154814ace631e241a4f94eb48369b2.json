{"ast":null,"code":"var _jsxFileName = \"D:\\\\Patch\\\\react\\\\react-auth\\\\src\\\\pages\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = props => {\n  _s();\n  const data = React.useMemo(() => [{\n    col1: 'Minsk',\n    col2: '27',\n    col3: 'rain'\n  }, {\n    col1: 'Vilnius',\n    col2: '30',\n    col3: 'rain'\n  }, {\n    col1: 'London',\n    col2: '23',\n    col3: 'rain'\n  }], []);\n  var columns = React.useMemo(() => [{\n    Header: 'City',\n    accessor: 'col1' // accessor is the \"key\" in the data\n  }, {\n    Header: 'Temperature',\n    accessor: 'col2'\n  }, {\n    Header: 'Weather Forecast',\n    accessor: 'col3' // accessor is the \"key\" in the data\n  }], []);\n  var {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"dZvy/r8EStcyd0FNOhMK5/Ns/jw=\", false, function () {\n  return [useTable];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","TaskList","props","_s","data","useMemo","col1","col2","col3","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["D:/Patch/react/react-auth/src/pages/TaskList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTable } from 'react-table';\r\nimport { Link } from \"react-router-dom\";\r\n \r\nimport { ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TaskList = (props:{name:string}) => {\r\n\r\n\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        col1: 'Minsk',\r\n        col2: '27',\r\n        col3: 'rain',\r\n      },\r\n      {\r\n        col1: 'Vilnius',\r\n        col2: '30',\r\n        col3: 'rain',\r\n      },\r\n      {\r\n        col1: 'London',\r\n        col2: '23',\r\n        col3: 'rain',\r\n      },\r\n    ],\r\n    []\r\n)\r\n\r\nvar columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'City',\r\n        accessor: 'col1', // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: 'Temperature',\r\n        accessor: 'col2',\r\n      },\r\n      {\r\n        Header: 'Weather Forecast',\r\n        accessor: 'col3', // accessor is the \"key\" in the data\r\n      },\r\n    ],\r\n    []\r\n)\r\n\r\nvar {\r\n  getTableProps,\r\n  getTableBodyProps,\r\n  headerGroups,\r\n  rows,\r\n  prepareRow,\r\n} = useTable({ columns, data })\r\n\r\n\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map(row => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default   TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,SAASC,QAAQ,QAAQ,aAAa;AAItC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAIC,KAAmB,IAAK;EAAAC,EAAA;EAGxC,MAAMC,IAAI,GAAGP,KAAK,CAACQ,OAAO,CACxB,MAAM,CACJ;IACEC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,CACF,EACD,EACJ,CAAC;EAED,IAAIC,OAAO,GAAGZ,KAAK,CAACQ,OAAO,CACvB,MAAM,CACJ;IACEK,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,MAAM,CAAE;EACpB,CAAC,EACD;IACED,MAAM,EAAE,aAAa;IACrBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,kBAAkB;IAC1BC,QAAQ,EAAE,MAAM,CAAE;EACpB,CAAC,CACF,EACD,EACJ,CAAC;EAED,IAAI;IACFC,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACF,CAAC,GAAGlB,QAAQ,CAAC;IAAEW,OAAO;IAAEL;EAAK,CAAC,CAAC;EAG7B,oBACEJ,OAAA;IAAA,GAAWY,aAAa,CAAC,CAAC;IAAAK,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EACGH,YAAY,CAACI,GAAG,CAACC,WAAW,iBAC3BnB,OAAA;QAAA,GAAQmB,WAAW,CAACC,mBAAmB,CAAC,CAAC;QAAAH,QAAA,EACtCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,iBAC7BtB,OAAA;UAAA,GAAQsB,MAAM,CAACC,cAAc,CAAC,CAAC;UAAAN,QAAA,EAAGK,MAAM,CAACE,MAAM,CAAC,QAAQ;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR5B,OAAA;MAAA,GAAWa,iBAAiB,CAAC,CAAC;MAAAI,QAAA,EAC3BF,IAAI,CAACG,GAAG,CAACW,GAAG,IAAI;QACfb,UAAU,CAACa,GAAG,CAAC;QACf,oBACE7B,OAAA;UAAA,GAAQ6B,GAAG,CAACC,WAAW,CAAC,CAAC;UAAAb,QAAA,EACtBY,GAAG,CAACE,KAAK,CAACb,GAAG,CAACc,IAAI,iBACjBhC,OAAA;YAAA,GAAQgC,IAAI,CAACC,YAAY,CAAC,CAAC;YAAAhB,QAAA,EAAGe,IAAI,CAACR,MAAM,CAAC,MAAM;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACvD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAAAzB,EAAA,CA5EKF,QAAQ;EAAA,QAgDVH,QAAQ;AAAA;AAAAoC,EAAA,GAhDNjC,QAAQ;AA8Ed,eAAiBA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}